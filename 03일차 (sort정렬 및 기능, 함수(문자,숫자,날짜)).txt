SORT 정렬 

select last_name, salary
from employees
order by last_name; 

select last_name, salary
from employees
order by salary asc; 


# order by 절은 select 문의 마지막절로 써야한다. <무조건!>
# 기본값은 오름차순으로 정렬되어있다. (order by뒤에 asc 적은것과 같다. ascending)
# 내림차순으로 정렬, desc (descending)

select department_id,salary
from employees
order by department_id asc, salary desc;

select last_name,department_id,salary*12 ann_sal
from employees
order by salary * 12; # 효율식 적은것을 그대로 적용해서 사용가능하다.

select last_name,department_id,salary*12 ann_sal
from employees
order by ann_sal; # 별칭 그대로도 가능하다.

# 단! 별칭을 쓰되 ""로 처리 했을 경우 ("ann_sal") 예로
그대로 ""도 같이 옮겨야 한다.

select last_name,department_id,salary*12 "ann_sal"
from employees
order by "ann_sal"; <예시>

# 위치 표기법을 통해 표현도 가능하다.
select last_name,department_id,salary*12 ann_sal
from employees
order by 3; (3번째 열로 정렬하도록 하겠습니다.)

# 혼합해서 하는 것도 가능하다.!
select last_name,department_id,salary*12 ann_sal
from employees
order by 2 asc, 3 desc; 

# 오름차순으로 NULL값이 나 올 경우 가장 밑으로 나온다. (내림차순은 반대)

오후수업

# 함수 : 기능의 프로그램 

1. 문자 함수

select lower(last_name),upper(last_name),initcap(last_name)
from employees;

select *
from employees
where lower(last_name)='king';

# 함수를 쓰면 full로 되는 경우가 있기 때문에 주의해서 써야한다.
# 문자 함수는 입력, 수정 할 때 써야 좋다 (조회에서는 별로이다.)

select last_name || first_name || salary, concat(last_name,first_name)
from employees;

# concat : 연결연산자랑 같은 함수를 의미한다. 단, 연결연산자는 무한대로 연결 가능하지만 concat은 2개만 가능하다.
# 연결연산자로 모두 연결 시 모든 타입이 문자형으로 바뀐다.

select last_name, length(last_name)
from employees;

# length: 문자의 길이를 나타내는 함수

select last_name, length(last_name),substr(last_name,1,3),substr(last_name,-2,2)
from employees;

# substr: 문자를 추출하는 함수 substr(열 이름, start, end) - 열 값들 중 start 부터 end까지 문자를 뽑겠다는 뜻
제일 뒷글자를 뽑고 싶다면 substr(열이름,-2,2) (음수를 통해서 나타내면 된다.)

select salary,lpad(salary,10,'*')
from employees;

# lpad(열값, 자리고정(범위), 왼쪽의 공백을 채우는 모양) - 자리수를 고정시켜 남은 값을 모양으로 채운다.

select salary,rpad(salary,10,'*')
from employees;

# rpad - 수를 채운후 나머지 오른쪽은 모양으로 채운다.

lpad,rpad 모두 문자함수 이므로 salary안의 값은 문자형으로 바뀐다.

select instr('abbcabbc','c')
from dual;

# dual: 범위테이블 (가상 테이블 생성)

select 1+2
from dual;

select instr('abbcabbc','c'),instr('abbcabbc','c',1,2)
from dual;

# instr: 문자값 위치를 찾아주는 함수, instr(문자열,찾는문자,숫자시작,몇번째인지)

select last_name,instr(last_name,'i')
from employees; - i의 위치가 어디 있는지 알려주는 함수

select last_name
from employees
where last_name like '%i%';

select last_name
from employees
where instr(last_name,'i')>0;

# like 연산자 보단 instr 값을 사용하는 것이 좋다. 이유는 like는 전체를 보고 instr는 범위로 보기 때문이다.

select trim('A' from 'AABBCAA')
from dual;

# trim 함수 :  trim(버릴값 from 접두,접미 부분 값을 제거한다.) 

select ltrim('AABBC','A'), rtrim('BBCA','A')
from dual;

# ltrim: 왼쪽 제거, rtrim: 오른쪽 제거
# 공백제거를 할 때에도 유용하다.

select replace('100-001','-','%')
from dual;

# replace 함수: replace(문자열,바꿀값,대체값) 치환함수로 불리운다.
# 예) 긍정인 값을 찾으려고 할 때 (예 좋다,좋아,조으다 등등) 대체해서 값으로 적으려 할때 사용 가능
# 예) 계좌번호를 적을때 -을 지워야 하는데 대체해서 없는값으로 만들어야 할때 replace 함수를 사용한다.

select replace(' 1 0 0 0  0 1',' ','')
from dual;

2. 숫자 함수

round, trunc, mod

select round(45.926,0), round(45.926,1), round(45.926,2), round(45.926,-1), round(45.926,-2)
from dual;

# round : 소수점을 버리게 반올림해서 버리는 함수를 의미한다. -를 넣을 경우 양수쪽으로 올라간다.
 -3 -2 -1 0. 1 2 3 4

select trunc(45.926,0), trunc(45.926,1), trunc(45.926,2), trunc(45.926,-1), trunc(45.926,-2)
from dual;

# trunc : 버림함수 

select mod(13,2)
from dual;

# mod : 나머지 값을 구하는 함수 mod(값,나눌값) 

select ceil(45.0), ceil(45.12), ceil(45.926)
from dual

# ceil : 소수점에 수가 나오면 무조건 올림을 하는 함수

3. 날짜 함수

날짜 계산

select sysdate # 현재 server시간을 알려주는 함수, 지역언어에 종속되어 나온다.
from dual;

날짜+숫자(일수) = 날짜 -> 일수를 더한 값과 같다.
날짜-숫자(일수) = 날짜 -> 일수를 뺀 값이 나온다.
날짜-날짜= 숫자(일수)
날짜+시간/24 = 날짜 -> 시간을 더하고자 할때 한다.
날짜 + 분/(24*60) = 날짜
날짜 + 초/(24*60*60) = 날짜
★ 날짜+날짜 = 오류

select sysdate+7,sysdate-7
from dual;

select employee_id,sysdate-hire_date
from employees;


select months_between(sysdate,hire_date)
from employees;

# months_between : 두 날짜 간의 달수를 나타내주는 함수 (날짜만 가능, 수는 오류가 뜬다) months_between(가장 최근 값, 가장 과거 값), 값은 숫자로 나온다.

select months_between(to_date('2018-05-24','yyyy-mm-dd'), to_date('2018-11-22','yyyy-mm-dd')) <문자날짜를 날짜형으로 꼭 바꿔서 해야하므로 to_date를 꼭 써야함)
from dual;

select add_months(sysdate,6)
from dual;

# add_months : 달 수를 더하는 함수 , 그 해의 달을 기준으로 더한다.

select next_day(sysdate,'금요일') 
from dual;

# next_day : 최근 요일을 나타내는 값, next_day(날짜,요일) 요일은 언어에 종속되어 있다.

select last_day(sysdate)
from dual;

# last_day : 이달의 마지막 요일이 나온다.

select round(sysdate,'month'), round(sysdate,'year')
from dual; - overload 기능, 객체지향 

- 달을 기준으로 일을 본다. (16일 기준으로 달을 반올림 한다.)
- 해를 중심으로 달을 본다. (6월 기준으로 해를 반올림 한다.)

select trunc(sysdate,'month'), trunc(sysdate,'year')
from dual;

- 그해의 1월 1일 그달의 1일로 버림해서 나온다.


